<title>Registro das Insumos</title>
<link rel="stylesheet" href="/css/menu-style.css">
<style>
    input[type="checkbox"] {
        display: block;
        margin: 6px;
    }

    * {
        margin: 0;
        padding: 0;
    }

    body {
        background-color: #f7f7f7;
        margin-left: 10%;
        overflow-x: hidden;
    }

    .table>:not(caption)>*>* {
        color: var(--bs-table-color-state, var(--bs-table-color-type, #146b12));
    }

    .header {
        background-color: #00b80f;
        color: white;
        padding: 22px;
        text-align: center;
        font-weight: bold;
        font-size: 24px;
        width: 111.5%;
        position: relative;
        margin-top: 22px;
        left: -9%;
    }

    .btn-custom {
        background-color: #00b80f;
        color: white;
        transition: background-color 0.3s ease;
    }

    .btn-custom:hover {
        background-color: #29702c;
        /* Verde mais claro no hover */
        color: rgb(211, 211, 211);
    }

    .btn-custom2 {
        background-color: #00b80f;
        color: white;
        transition: background-color 0.3s ease;
    }

    .btn-custom2:hover {
        background-color: #29702c;
        /* Verde mais claro no hover */
        color: rgb(211, 211, 211);
    }

    .d-flex2 {
        width: 100%;
        max-width: 400px;
        padding-left: 40px;
        border: none;
        margin-left: 1%;
        margin-top: 15px;
    }

    .search-bar {
        display: flex;
    }

    /* Alinhar botões de forma responsiva */
    .d-flex {
        display: flex;
        margin-bottom: 20px;
        justify-content: space-evenly;
        align-items: center;
        flex-wrap: wrap;
    }

    .btn-group {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .input-group {
        font-family: 'Didact Gothic', sans-serif;
    }

    .form-select {
        color: #146b12;
        font-weight: bold;
    }

    .sair-btn {
        position: absolute;
        top: 0.5rem;
        right: 1rem;
    }

    /* Responsividade */
    @media (max-width: 768px) {
        .search-bar {
            width: 100%;
            margin-bottom: 10px;
        }

        .btn-custom {
            width: 30%;
            height: 82px;
        }

        .btn-custom2 {
            width: 71%;
            height: 82px;
        }

        .d-flex {
            flex-direction: row;
            margin-left: 4%;
            gap: 1px;
        }

        .sair-btn {
            position: relative;
            bottom: 2rem;
            top: 1rem;
            left: 2rem;
            right: unset;
        }
    }

    /* Tabela responsiva */
    .table-responsive {
        overflow-x: auto;
        /* Permite rolar horizontalmente */
        -webkit-overflow-scrolling: touch;
        /* Melhor experiência de scroll em iOS */
    }

    table {
        width: 100%;
        /* Garantir que a tabela ocupe 100% da área disponível */
    }
</style>
</head>

<body>
    <div class="container">
        <section id="menu_lateral" style=" position: fixed; z-index: 1; width: 100%">
            <nav class="menu-lateral">
                <div class="btn-expandir" id="btn-exp">
                    <i class="bi bi-list"></i>
                </div>

                <ul>
                    <li class="item-menu" id="menu-dashboard">
                        <a href="/dashboard">
                            <span class="icon-menu">
                                <i class="bi bi-columns-gap"></i>
                            </span>
                            <span class="txt-menu">Dashboard</span>
                        </a>
                    </li>

                    <li class="item-menu" id="menu-colheitas">
                        <a href="/colheitas">
                            <span class="icon-menu">
                                <i class="bi bi-tree"></i>
                            </span>
                            <span class="txt-menu">Colheitas</span>
                        </a>
                    </li>

                    <li class="item-menu" id="menu-insumos">
                        <a href="/insumos">
                            <span class="icon-menu">
                                <i class="bi bi-droplet"></i>
                            </span>
                            <span class="txt-menu">Insumos</span>
                        </a>
                    </li>

                    <li class="item-menu" id="menu-compra-fornecedor">
                        <a href="/compra-fornecedor">
                            <span class="icon-menu">
                                <i class="bi bi-bag"></i>
                            </span>
                            <span class="txt-menu">Insumos/Fornecedores</span>
                        </a>
                    </li>

                    <li class="item-menu" id="menu-conta">
                        <a href="/conta">
                            <span class="icon-menu">
                                <i class="bi bi-person-circle"></i>
                            </span>
                            <span class="txt-menu">Sua conta</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </section>

        <!-- Barra de pesquisa -->
        <form class="d-flex2" role="search">
            <div class="search-bar">
                <input class="form-control me-2" type="search" placeholder="Pesquisar" aria-label="Search">
                <button class="btn btn-outline-success" type="submit"><i class="bi bi-search"></i></button>
            </div>
        </form>

        <div class="header">
            Estoque de Insumos
        </div>

        <!-- Seção principal -->
        <div class="container mt-4">
            <div class="d-flex gap-2 d-md-block">
                <div class="d-flex justify-content-md-end">
                    <button type="submit" class="btn btn-custom2">Gerar Relatório Mensal</button>
                </div>
                <button class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#novoItemModal">Novo +</button>
                <button class="btn btn-custom" id="editarButton" data-bs-toggle="modal"
                    data-bs-target="#editarItemModal" onclick="abrirModalEdicao()">Editar</button>



            </div>

            <!-- Tabela -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="table-success">
                        <tr>
                            <th></th>
                            <th>Nome</th>
                            <th>Quantidade</th>
                            <th>Validade</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each insumos}}
                        <tr id="insumo-row-{{this.id}}"> <!-- Adicione um ID à linha -->
                            <td><input type="radio" class="radio" name="insumoSelecionado" value="{{this.id}}"></td>
                            <td>{{../tipoinsumos.[this.tipo_insumoId].nome}}</td>
                            <!-- Acesse o nome do tipo de insumo -->
                            <td>{{quantidade}}</td>
                            <td>{{validade}}</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="deleteInsumo({{this.id}})">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Modal para editar informações de Insumos -->
        <div class="modal fade" id="editarItemModal" tabindex="-1" aria-labelledby="editarItemModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editarItemModalLabel">Editar Insumo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form action="/atualizar-insumo" method="POST" id="editarItemForm">
                            <input type="hidden" id="insumoId" name="insumoId" />
                            <!-- Campo oculto para armazenar o ID do insumo a ser editado -->
                            <div class="mb-3">
                                <label for="editarSelectTipoInsumo" class="form-label">Tipo de Insumo</label>
                                <select class="form-select" id="editarSelectTipoInsumo" name="tipoInsumo" required>
                                    <option value="">Selecione um tipo de insumo</option>
                                    {{#each tiposInsumo}}
                                    <option value="{{this.id}}">{{this.nome}}</option>
                                    {{/each}}
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="editarSelectFornecedor" class="form-label">Fornecedor</label>
                                <select class="form-select" id="editarSelectFornecedor" name="fornecedor" required>
                                    <option value="">Selecione um fornecedor</option>
                                    {{#each fornecedores}}
                                    <option value="{{this.id}}">{{this.nome}}</option>
                                    {{/each}}
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="editarItemQuantidade" class="form-label">Quantidade</label>
                                <input type="number" class="form-control" id="editarItemQuantidade" name="quantidade"
                                    placeholder="Digite a quantidade" required>
                            </div>

                            <div class="mb-3">
                                <label for="editarItemValidade" class="form-label">Validade</label>
                                <input type="date" class="form-control" id="editarItemValidade" name="validade"
                                    required>
                            </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        <button type="submit" class="btn btn-success" id="salvarEdicaoItem">Salvar Alterações</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>


        <!-- Modal Add -->
        <div class="modal fade" id="novoItemModal" tabindex="-1" aria-labelledby="novoItemModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="novoItemModalLabel">Adicionar Novo Insumo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form action="/add-insumos" method="POST" id="novoItemForm">
                            <div class="mb-3">
                                <label for="selectTipoInsumo" class="form-label">Tipo de Insumo</label>
                                <select class="form-select" id="selectTipoInsumo" name="tipoInsumo" required>
                                    <option value="">Selecione um tipo de insumo</option>
                                    {{#each tiposInsumo}}
                                    <option value="{{this.id}}">{{this.nome}}</option>
                                    {{/each}}
                                </select>

                                <div class="mt-2">
                                    <input type="text" class="form-control" id="novoTipoInsumo"
                                        placeholder="Adicionar novo tipo de insumo" />
                                    <button type="button" class="btn btn-primary mt-1"
                                        id="btnAddTipoInsumo">Adicionar</button>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="selectFornecedor" class="form-label">Fornecedor</label>
                                <select class="form-select" id="selectFornecedor" name="fornecedor" required>
                                    <option value="">Selecione um fornecedor</option>
                                    {{#each fornecedores}}
                                    <option value="{{this.id}}">{{this.nome}}</option>
                                    {{/each}}
                                </select>
                                <div class="mt-2">
                                    <input type="text" class="form-control" id="novoFornecedorNome"
                                        placeholder="Nome do fornecedor" />
                                    <input type="tel" class="form-control mt-1" id="novoFornecedorTelefone"
                                        placeholder="Telefone do fornecedor" />
                                    <button type="button" class="btn btn-primary mt-1"
                                        id="btnAddFornecedor">Adicionar</button>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="itemQuantidade" class="form-label">Quantidade</label>
                                <input type="number" class="form-control" id="itemQuantidade" name="quantidade"
                                    placeholder="Digite a quantidade" required>
                            </div>
                            <div class="mb-3">
                                <label for="itemValidade" class="form-label">Validade</label>
                                <input type="date" class="form-control" id="itemValidade" name="validade" required>
                            </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        <button type="submit" class="btn btn-success" id="salvarNovoItem">Salvar</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="sair-btn">
        <button type="button" class="btn btn-success" style="margin-top: 1rem;">
            <a class="text-end" href="/" style="color: rgb(218, 218, 218)"> Sair </a>
        </button>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
       
//Abrir o modal de insumo
function abrirModalEdicao() {
  const radios = document.querySelectorAll('input[name="insumoSelecionado"]');
  let insumoIdSelecionado = null;

  // Encontra o insumo selecionado
  radios.forEach(radio => {
      if (radio.checked) {
          insumoIdSelecionado = radio.value;
      }
  });

  if (!insumoIdSelecionado) {
      alert('Por favor, selecione um insumo para editar.');
      return;
  }

  // Aqui você pode buscar os dados do insumo
  const insumo = insumos.find(insumo => insumo.id == insumoIdSelecionado); // Acesso aos dados dos insumos

  // Preenchendo o modal com as informações do insumo
  document.getElementById('insumoId').value = insumo.id;
  document.getElementById('editarSelectTipoInsumo').value = insumo.tipo_insumoId;
  document.getElementById('editarSelectFornecedor').value = insumo.fornecedorId;
  document.getElementById('editarItemQuantidade').value = insumo.quantidade;
  document.getElementById('editarItemValidade').value = insumo.validade;

  // Mostra o modal
  const modal = new bootstrap.Modal(document.getElementById('editarItemModal'));
  modal.show();

  // Adiciona um listener para o envio do formulário
  document.getElementById('editarItemForm').onsubmit = async (event) => {
      event.preventDefault(); // Previne o envio padrão do formulário

      const formData = new FormData(event.target);

      try {
          const response = await fetch('/atualizar-insumo', {
              method: 'POST',
              body: formData,
          });

          if (!response.ok) {
              throw new Error('Erro na atualização do insumo');
          }

          const result = await response.json();
          alert(result.message); // Exibe a mensagem de sucesso

          // Atualize a tabela ou faça um refresh da página se necessário
          location.reload(); // Recarrega a página para refletir as mudanças

      } catch (error) {
          console.error(error);
          alert('Erro ao atualizar o insumo');
      }
  };
}

        document.getElementById('btnAddTipoInsumo').addEventListener('click', async () => {
            const novoTipo = document.getElementById('novoTipoInsumo').value;

            try {
                const response = await fetch('/add-tipo-insumo', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ novoTipo })
                });

                const data = await response.json();

                if (response.ok) {
                    alert(data.message); // Mostra a mensagem de sucesso
                    // Aqui você pode adicionar o novo tipo de insumo ao <select> se necessário
                } else {
                    throw new Error(data.message); // Lança erro para o catch
                }
            } catch (error) {
                console.error('Erro:', error);
                alert('Erro ao adicionar tipo de insumo');
            }
        });


        document.getElementById('btnAddFornecedor').addEventListener('click', async () => {
            const nome = document.getElementById('novoFornecedorNome').value;
            const telefone = document.getElementById('novoFornecedorTelefone').value;

            if (nome && telefone) {
                try {
                    const response = await fetch('/add-fornecedor', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ nome, telefone }),
                    });

                    if (response.ok) {
                        alert('Fornecedor adicionado com sucesso!');
                        // Adicione lógica para atualizar o <select> de fornecedores
                        const fornecedorSelect = document.getElementById('fornecedor');
                        const option = document.createElement('option');
                        option.value = nome; // ou o id retornado do servidor
                        option.textContent = nome;
                        fornecedorSelect.appendChild(option);
                        document.getElementById('novoFornecedorNome').value = ''; // Limpa o campo
                        document.getElementById('novoFornecedorTelefone').value = ''; // Limpa o campo
                    } else {
                        const errorData = await response.json();
                        alert(`Erro: ${errorData.message}`);
                    }
                } catch (error) {
                    console.error('Erro ao adicionar fornecedor:', error);
                    alert('Erro ao adicionar fornecedor');
                }
            } else {
                alert('Por favor, preencha todos os campos do fornecedor.');
            }
        });
    </script>




</body>

</html>